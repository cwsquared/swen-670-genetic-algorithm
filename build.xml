<project name="GeneticAlgorithm" basedir="." default="build">
	<description>Builds, tests, and runs the project genetic algorithm program.</description>
	
	<property name="src.java.dir" location="src"/>
	<property name="src.test.dir" location="tests"/>
	
	<property name="build.dir" location="build"/>
	<property name="build.classes.src.dir" location="${build.dir}/classes"/>
	<property name="build.classes.test.dir" location="${build.dir}/test/classes"/>
	<property name="testreport.dir" location="${build.dir}/testreports"/>
	<property name="javadocs.dir" location="${build.dir}/docs"/>
	
    <target name="clean" description="Cleans build directory">
        <delete dir="${build.dir}" />
    </target>

    <target name="compile" depends="clean" description="Compiles the code">
        <mkdir dir="${build.dir}"/>
    	<mkdir dir="${build.classes.src.dir}" />
    	<mkdir dir="${build.classes.test.dir}" />
        <javac srcdir="${src.java.dir}" destdir="${build.classes.src.dir}" includeantruntime="false" />
    	<javac srcdir="${src.test.dir}" destdir="${build.classes.test.dir}" includeantruntime="false">
    		<classpath>
    			<pathelement location="${build.classes.src.dir}"/>
    			<fileset dir="libs">
    				<include name="**/*.jar"/>
    			</fileset>
    		</classpath>
    	</javac>
    </target>

    <target name="jar" depends="compile" description="Builds JAR">
        <jar destfile="${build.dir}/GeneticAlgorithm.jar" basedir="${build.classes.src.dir}">
            <manifest>
                <attribute name="GA-Class" value="geneticalgorithm.ResearchGA"/>
            </manifest>
        </jar>
    </target>
	
	<target name="doc" depends="compile" description="Generate Java documentation">
		<mkdir dir="${javadocs.dir}"/>
		<javadoc destdir="${javadocs.dir}">
			<fileset dir="${src.java.dir}" />
		</javadoc>
	</target>
	
	<!-- Ant task to run unit tests and produce report.-->
	<target name="test" depends="compile" description="Run unit tests and create unit test report" >
		<mkdir dir="${testreport.dir}"/>
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes">
			<formatter type="plain" usefile="false"/>
			<formatter type="xml"/>
			<batchtest todir="${testreport.dir}">
				<fileset dir="${src.test.dir}">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
			<classpath>
				<fileset dir="libs">
					<include name="**/*.jar"/>
				</fileset>
				<pathelement location="${build.classes.src.dir}" />
				<pathelement location="${build.classes.test.dir}" />
			</classpath>
		</junit>
	</target>
	
	<target name="test-report" depends="test" description="Create unit test report">
		<mkdir dir="${testreport.dir}/html"/>
		<junitreport todir="${testreport.dir}">
			<fileset dir="${testreport.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report todir="${testreport.dir}/html"/>
		</junitreport>
	</target>
	
	<!-- Run before a code commit -->
	<target name="pre-commit" depends="compile,doc" description="Runs unit tests, generates java docs, and compiles code." />
	
	<target name="build" depends="jar,test-report,doc" description="Builds the JAR, runs unit tests, creates Java Docs" />
</project>